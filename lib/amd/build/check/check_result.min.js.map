{"version":3,"file":"check_result.min.js","sources":["../../src/check/check_result.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Check API result functions\n *\n * @module     core/check\n * @copyright  2023 Matthew Hilton <matthewhilton@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getCheckResult} from './repository';\nimport {getString} from 'core/str';\n\n/**\n * Get the result of a check and replace a given DOM element with the result.\n *\n * @method getAndRender\n * @param {String} domSelector A CSS selector for a dom element to replace the the HTML for.\n * @param {String} reference Unique reference to a check\n * @param {Boolean} includeDetails If true, details will be included in the check.\n * By default only the status and the summary is returned.\n */\nasync function getAndRender(domSelector, reference, includeDetails) {\n    const element = document.querySelector(domSelector);\n\n    if (!element) {\n        window.console.error('Check selector not found');\n        return;\n    }\n\n    try {\n        const result = await getCheckResult(reference, includeDetails, true);\n        const decoded = new DOMParser().parseFromString(result.html, \"text/html\").documentElement.textContent;\n        element.innerHTML = decoded;\n    } catch (e) {\n        window.console.error(e);\n        element.innerHTML = await getString('checkerror', 'core', reference);\n    }\n}\n\nexport default getAndRender;\n"],"names":["domSelector","reference","includeDetails","element","document","querySelector","result","decoded","DOMParser","parseFromString","html","documentElement","textContent","innerHTML","e","window","console","error"],"mappings":";;;;;;;;eAmC4BA,YAAaC,UAAWC,sBAC1CC,QAAUC,SAASC,cAAcL,gBAElCG,kBAMKG,aAAe,8BAAeL,UAAWC,gBAAgB,GACzDK,SAAU,IAAIC,WAAYC,gBAAgBH,OAAOI,KAAM,aAAaC,gBAAgBC,YAC1FT,QAAQU,UAAYN,QACtB,MAAOO,GACLC,OAAOC,QAAQC,MAAMH,GACrBX,QAAQU,gBAAkB,kBAAU,aAAc,OAAQZ,gBAV1Dc,OAAOC,QAAQC,MAAM"}